/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.controller;

import HeaderCustom.DefaultHeader;
import HeaderCustom.WonHeaderRenderer;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import static java.lang.String.format;
import static java.lang.String.format;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import static java.util.Collections.list;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import dao.ImageDAO;
import database.Database;
import java.awt.Font;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.table.TableColumn;

import model.ImageModel;
import model.RenderModel;
import rojerusan.necesario.RSScrollBar;
import service.ImageService;

/**
 *
 * @author User
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form body
     */
    //ui
    JFileChooser fileChooser = new JFileChooser();
     
     //database and service implement
     private Connection con;
     private ResultSet rs;
     private PreparedStatement ps;
     private ImageIcon image;
     private ImageService imageService;
     
     private int xMouse; //for fram/panel movin
     private int yMouse;
     
    public Main() {
    this.imageService = new ImageDAO(); //dao
    initComponents();
    jScrollPane1.getVerticalScrollBar().setUI(new RSScrollBar());
     
     
      
    table2.getTableHeader().setOpaque(true);
    table2.setBackground(new Color (51,51,51)); //BODY BACKGROUND
    table2.setForeground(Color.white);
    table2.setGridColor(Color.yellow);
        
    table2.getTableHeader().setDefaultRenderer(new DefaultHeader());
    table2.getColumnModel().getColumn(2).setHeaderRenderer(new WonHeaderRenderer());
      
      arrangedDataInTable(); //onload sql data
}
    
     
    
    
     public void arrangedDataInTable()  {
        ArrayList<ImageModel> list = imageService.displayInformation();  
        String[] columnName = {"Id","Name","Image"};
        Object[][] row = new Object[list.size()][3];
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        for (int i = 0; i < list.size(); i++) {
          row[i][0] = list.get(i).getId();
          row[i][1] = list.get(i).getName();
          
            if(list.get(i).getMyimage()!= null){
                System.out.print("true");
                        
             image = new ImageIcon(new ImageIcon(list.get(i).getMyimage()).getImage()
             .getScaledInstance(150, 120, Image.SCALE_SMOOTH) );   
             
             row[i][2] = image;
            }
            else{
                   System.out.print("false");
                row[i][2] = null;
            }

        }
        RenderModel modelo = new RenderModel(row,columnName);
        table2.setModel(modelo);
        table2.setRowHeight(120);
         table2.getColumnModel().getColumn(0).setPreferredWidth(50);
         table2.getColumnModel().getColumn(1).setPreferredWidth(50);
        table2.getColumnModel().getColumn(2).setPreferredWidth(20);


    }
 
 
     
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        update = new rojerusan.RSMaterialButtonRectangle();
        name = new javax.swing.JTextField();
        attachments = new rojerusan.RSMaterialButtonRectangle();
        save = new rojerusan.RSMaterialButtonRectangle();
        img = new javax.swing.JTextField();
        addingPicture = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        cancel = new rojerusan.RSMaterialButtonRectangle();
        id = new javax.swing.JTextField();
        systemExit = new javax.swing.JLabel();
        iconified = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(70, 62, 63));
        setUndecorated(true);

        background.setBackground(new java.awt.Color(51, 51, 51));
        background.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                backgroundMouseDragged(evt);
            }
        });
        background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backgroundMousePressed(evt);
            }
        });
        background.setLayout(null);

        update.setBackground(new java.awt.Color(114, 123, 127));
        update.setText("update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        background.add(update);
        update.setBounds(410, 290, 90, 40);

        name.setBackground(new java.awt.Color(51, 51, 51));
        name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setOpaque(false);
        background.add(name);
        name.setBounds(240, 240, 450, 30);

        attachments.setBackground(new java.awt.Color(114, 123, 127));
        attachments.setText("Attachments ");
        attachments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachmentsActionPerformed(evt);
            }
        });
        background.add(attachments);
        attachments.setBounds(360, 130, 183, 47);

        save.setBackground(new java.awt.Color(114, 123, 127));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        background.add(save);
        save.setBounds(320, 290, 90, 40);

        img.setEditable(false);
        img.setBackground(new java.awt.Color(51, 51, 51));
        img.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        img.setForeground(new java.awt.Color(255, 255, 255));
        img.setOpaque(false);
        img.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgActionPerformed(evt);
            }
        });
        background.add(img);
        img.setBounds(240, 190, 450, 30);

        addingPicture.setBackground(new java.awt.Color(255, 153, 153));
        addingPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addingPicture.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        background.add(addingPicture);
        addingPicture.setBounds(20, 20, 160, 140);

        table2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "id", "name", "image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table2);
        if (table2.getColumnModel().getColumnCount() > 0) {
            table2.getColumnModel().getColumn(0).setResizable(false);
            table2.getColumnModel().getColumn(1).setResizable(false);
            table2.getColumnModel().getColumn(2).setResizable(false);
        }

        background.add(jScrollPane1);
        jScrollPane1.setBounds(20, 350, 880, 290);

        cancel.setBackground(new java.awt.Color(114, 123, 127));
        cancel.setText("Cancel");
        background.add(cancel);
        cancel.setBounds(500, 290, 90, 40);

        id.setEditable(false);
        id.setBackground(new java.awt.Color(51, 51, 51));
        id.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        id.setForeground(new java.awt.Color(255, 255, 255));
        id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id.setOpaque(false);
        background.add(id);
        id.setBounds(240, 140, 80, 40);

        systemExit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        systemExit.setForeground(new java.awt.Color(255, 255, 255));
        systemExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        systemExit.setText("X");
        systemExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                systemExitMouseClicked(evt);
            }
        });
        background.add(systemExit);
        systemExit.setBounds(880, 10, 30, 30);

        iconified.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        iconified.setForeground(new java.awt.Color(255, 255, 255));
        iconified.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconified.setText("-");
        iconified.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconifiedMouseClicked(evt);
            }
        });
        background.add(iconified);
        iconified.setBounds(850, 10, 30, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(920, 646));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void attachmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachmentsActionPerformed
      fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
try {
      
      int result = fileChooser.showOpenDialog(this);

if (result == JFileChooser.APPROVE_OPTION) 
{
    File selectedFile = fileChooser.getSelectedFile();
    System.out.println("Selected file: " + selectedFile.getAbsolutePath());
    img.setText(selectedFile.getAbsolutePath());
    
    BufferedImage img = ImageIO.read(fileChooser.getSelectedFile());//1st step dapat file muna sya or bytes
        
     image = new ImageIcon(img.getScaledInstance(160, 150, Image.SCALE_SMOOTH)); //saka sya coconvert sa image rerender
    addingPicture.setIcon(image); //didisplay mo
        
        
      
    
//    ImageIcon icon = new ImageIcon(selectedFile.get);
//    
//    render.setIcon(icon);
//    
}    
        }catch(IOException e){
        e.printStackTrace();
        }
    }//GEN-LAST:event_attachmentsActionPerformed

    private void imgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imgActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
       
        try {
             FileInputStream fin = new FileInputStream(fileChooser.getSelectedFile());
             String naming = name.getText();
               
             
             System.out.print("your data: "+fin);
         
           
            //File myFile = new File(img.getText());
            ImageModel set = new ImageModel();
            set.setFile(fin); //file
            set.setName(naming); //name column
            
          
           
            imageService.saveImage(set);
             JOptionPane.showMessageDialog(rootPane, "Success save");
             
             //refresh
             arrangedDataInTable();
            
             img.setText("");
             name.setText("");
            
            
        } catch (FileNotFoundException ex  ) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Please Complete the blank details");
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(rootPane, "Please Complete the blank details");
           
        }
        
        
       
    
    
    }//GEN-LAST:event_saveActionPerformed
public void getInformation (int index){
    //ready for renderer
  
    
    
    byte[] render = imageService.displayInformation().get(index).getMyimage();
    
    //get the value from information displayInformation method
    id.setText(Integer.toString(imageService.displayInformation().get(index).getId()));
    name.setText(imageService.displayInformation().get(index).getName());
//    img.setText(render.toString());
    image = new ImageIcon(new ImageIcon(render).getImage()
             .getScaledInstance(160, 150, Image.SCALE_SMOOTH) );   
    addingPicture.setIcon(image);
    

   
}
    private void table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table2MouseClicked
         int index = table2.getSelectedRow();
           //method
        getInformation(index);
    }//GEN-LAST:event_table2MouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
       
      
       
         
            try {
           
               FileInputStream fin = new FileInputStream(fileChooser.getSelectedFile());
               String naming = name.getText();
               int ids =Integer.parseInt(id.getText()) ;
               
             
          
                ImageModel set = new ImageModel();
                set.setFile(fin); 
                set.setName(naming); 
                set.setId(ids);
                 
                 //query
                 imageService.updateInformation(set);
                 System.out.print("working update");
                 JOptionPane.showMessageDialog(rootPane, "Success update");
             //refresh
             arrangedDataInTable();
             
             id.setText("");
             img.setText("");
             name.setText("");
            
            } catch (Exception ex) {
                ex.printStackTrace();
               JOptionPane.showMessageDialog(rootPane, "Please Complete the blank details");
            }
      
           
            
                
        
    }//GEN-LAST:event_updateActionPerformed

    private void systemExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_systemExitMouseClicked
        for (double i= 1.0; i>=0.0; i = i-0.1 ){
            String val = i+"";
            float f =Float.valueOf(val);
            this.setOpacity(f);
            try{
                Thread.sleep(30);
            }catch (Exception e){

            }
        }

        System.exit(0);
    }//GEN-LAST:event_systemExitMouseClicked

    private void iconifiedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconifiedMouseClicked
        //fade

        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_iconifiedMouseClicked

    private void backgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMousePressed
          xMouse= evt.getX();
    yMouse= evt.getY();
    }//GEN-LAST:event_backgroundMousePressed

    private void backgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMouseDragged
        int x =evt.getXOnScreen();
        int y =evt.getYOnScreen();      
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_backgroundMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addingPicture;
    private rojerusan.RSMaterialButtonRectangle attachments;
    private javax.swing.JPanel background;
    private rojerusan.RSMaterialButtonRectangle cancel;
    private javax.swing.JLabel iconified;
    private javax.swing.JTextField id;
    private javax.swing.JTextField img;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private rojerusan.RSMaterialButtonRectangle save;
    private javax.swing.JLabel systemExit;
    private javax.swing.JTable table2;
    private rojerusan.RSMaterialButtonRectangle update;
    // End of variables declaration//GEN-END:variables
}
